<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>告白气球</title>
  <icon>https://www.gravatar.com/avatar/bb84a76b83268fe0aac6039100992b11</icon>
  <subtitle>七里香</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://anniepzk.cn/"/>
  <updated>2019-11-17T05:00:54.127Z</updated>
  <id>https://anniepzk.cn/</id>
  
  <author>
    <name>Annie</name>
    <email>shirongfanga128@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习_kNN</title>
    <link href="https://anniepzk.cn/article/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-kNN/"/>
    <id>https://anniepzk.cn/article/机器学习-kNN/</id>
    <published>2019-11-17T05:00:10.000Z</published>
    <updated>2019-11-17T05:00:54.127Z</updated>
    
    <content type="html"><![CDATA[<hr><ul><li>了解KNN算法的思想及其原理</li><li>使用python手动实现KNN算法，并在sklearn中调用KNN算法</li><li>了解监督学习和非监督学习的概念</li></ul><hr><h2 id="关于knn">关于KNN</h2><h3 id="一-算法介绍">一、算法介绍</h3><p>kNN（k-NearestNeighbor）算法中文名称叫做k近邻算法，是众多机器学习算法里面最基础入门的算法。它是一个有监督的机器学习算法，既可以用来做分类任务也可以用来做回归任务。kNN算法的核心思想是未标记的样本的类别，由距离他最近的K个邻居投票来决定</p><blockquote><p>监督学习：给机器的训练数据拥有“标记”或者“答案”<br>非监督学习：给机器的训练数据是没有“标记”或者“答案”。<br>半监督学习：一部分数据有“标记”或者“答案”，另一部分数据没有。常见于各种原因产生的标记缺失。通常都先使用无监督学习手段对数据做处理，之后使用监督学习手段做模型的训练和预测</p></blockquote><p>为了便于加深对kNN算法的理解，举个例子：</p><p>如图所示，要想判断D是什么颜色的，找到与其距离最近的5个点，有3个是蓝色的（C），两个是橙色的（B），因此我们认为D是蓝色（C）的集合</p><p><img src="https://s2.ax1x.com/2019/11/13/MYG4pt.png" alt="MYG4pt.png"></p><p>因此我们说：</p><blockquote><p>在一个给定的类别已知的训练样本集中，已知样本集中每一个数据与所属分类的对应关系（标签）。在输入不含有标签的新样本后，将新的数据的每个特征与样本集中数据对应的特征进行比较，然后算法提取样本最相似的k个数据(最近邻)的分类标签。通过多数表决等方式进行预测。即选择k个最相似数据中出现次数最多的分类，作为新数据的分类。<br>K近邻法不具有显式的学习过程，而是利用训练数据集对特征向量空间进行划分，并作为其分类的“模型”。</p></blockquote><h3 id="二-算法实现">二、算法实现</h3><p>打开Jupyter Notebook，创建Python3文件</p><p>首先我们准备一组数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"># raw_data_x是特征，raw_data_y是标签，0为良性，1为恶性</span><br><span class="line">raw_data_X = [[3.393533211, 2.331273381],</span><br><span class="line">              [3.110073483, 1.781539638],</span><br><span class="line">              [1.343853454, 3.368312451],</span><br><span class="line">              [3.582294121, 4.679917921],</span><br><span class="line">              [2.280362211, 2.866990212],</span><br><span class="line">              [7.423436752, 4.685324231],</span><br><span class="line">              [5.745231231, 3.532131321],</span><br><span class="line">              [9.172112222, 2.511113104],</span><br><span class="line">              [7.927841231, 3.421455345],</span><br><span class="line">              [7.939831414, 0.791631213]</span><br><span class="line">             ]</span><br><span class="line">raw_data_Y =[0, 0, 0, 0, 0, 1, 1, 1, 1, 1] </span><br><span class="line">#设置训练组</span><br><span class="line">X_train = np.array(raw_data_X)</span><br><span class="line">Y_train = np.array(raw_data_Y)</span><br><span class="line"># 将数据可视化</span><br><span class="line">plt.scatter(X_train[y_train==0,0],X_train[y_train==0,1], color=&apos;g&apos;, label = &apos;Tumor Size&apos;)</span><br><span class="line">plt.scatter(X_train[y_train==1,0],X_train[y_train==1,1], color=&apos;r&apos;, label = &apos;Time&apos;)</span><br><span class="line">plt.xlabel(&apos;Tumor Size&apos;)</span><br><span class="line">plt.ylabel(&apos;Time&apos;)</span><br><span class="line">plt.axis([0,10,0,5])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>数据可视化后生成的图片如下图所示。其中横轴是肿块大小，纵轴是发现时间。每个病人的肿块大小和发病时间构成了二维平面特征中的一个点。对于每个点，我们通过label明确是恶性肿瘤（绿色）、良性肿瘤（红色）。<br><img src="https://s2.ax1x.com/2019/11/13/MYG51P.png" alt="MYG51P.png"><br>那么现在给出一个肿瘤患者的数据（样本点）x：[8.90933607318, 3.365731514]，是良性肿瘤还是恶性肿瘤,求距离：<br>我们要做的是：求点x到数据集中每个点的距离，首先计算距离，使用欧氏距离</p><h3 id="knn过程">kNN过程</h3><h4 id="统计知识回顾">统计知识回顾</h4><blockquote><p>欧拉距离<br><a href="https://imgchr.com/i/MU9Sh9" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/14/MU9Sh9.md.png" alt="MU9Sh9.md.png"></a></p></blockquote><p><img src="https://s2.ax1x.com/2019/11/14/MUpztJ.png" alt="MUpztJ.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;了解KNN算法的思想及其原理&lt;/li&gt;
&lt;li&gt;使用python手动实现KNN算法，并在sklearn中调用KNN算法&lt;/li&gt;
&lt;li&gt;了解监督学习和非监督学习的概念&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;关于knn&quot;&gt;关于KNN&lt;/h2&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>[Hexo] Theme Annie</title>
    <link href="https://anniepzk.cn/article/hexo-theme-annie/"/>
    <id>https://anniepzk.cn/article/hexo-theme-annie/</id>
    <published>2019-11-04T08:51:24.000Z</published>
    <updated>2019-11-16T11:15:40.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>This Annie theme created by <a href="https://anniepzk.cn/">Annie</a> modified from the original Porter <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></p></blockquote><h1 id="live-demo">Live Demo</h1><p>Annie Blog : <a href="https://anniepzk.cn/">anniepzk.cn</a></p><p><img src="https://cdn.jsdelivr.net/gh/anniepzk/anniepzk.github.io/img/article/annie_blog.jpg" alt="Theme Annie"></p><h1 id="install-hexo">Install Hexo</h1><p>Install Node.js  and Git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>For Mac</span><br><span class="line">brew install node</span><br><span class="line">brew install git</span><br></pre></td></tr></table></figure><p>Install hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>For more:https://hexo.io/zh-cn/index.html</span><br></pre></td></tr></table></figure><h1 id="theme-usage">Theme Usage</h1><h2 id="init">Init</h2><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/anniepzk/anniepzk.github.io.git ./hexo-annie</span><br><span class="line"><span class="built_in">cd</span> hexo-annie</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="modify">Modify</h2><hr><p>Modify <code>_config.yml</code> file with your own info.<br>Especially the section:</p><h3 id="deployment">Deployment</h3><p>Replace to your own repo!</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure><h3 id="sidebar-settings">Sidebar settings</h3><p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sidebar:</span> <span class="literal">true</span>    <span class="comment"># whether or not using Sidebar.</span></span><br><span class="line"><span class="attr">sidebar-about-description:</span> <span class="string">"&lt;your description&gt;"</span></span><br><span class="line"><span class="attr">sidebar-avatar:</span> <span class="string">img/&lt;your</span> <span class="string">avatar</span> <span class="string">path&gt;</span></span><br></pre></td></tr></table></figure><p>and activate your personal widget you like</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">widgets:</span>         <span class="comment"># here are widget you can use, you can comment out</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">featured-tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">short-about</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">recent-posts</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">friends-blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span></span><br></pre></td></tr></table></figure><p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p><h3 id="signature-setup">Signature Setup</h3><p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">signature:</span> <span class="literal">true</span>   <span class="comment"># show signature</span></span><br><span class="line"><span class="attr">signature-img:</span> <span class="string">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure><h3 id="go-to-top-icon-setup">Go to top icon Setup</h3><p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p><h3 id="post-tag">Post tag</h3><p>You can decide to show post tags or not.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">home_posts_tag:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/anniepzk/anniepzk.github.io/img/article/tag.jpg" alt="home_posts_tag-true"></p><h3 id="markdown-render">Markdown render</h3><p>My markdown render engine plugin is <a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line"><span class="attr">  render:</span></span><br><span class="line"><span class="attr">    html:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    breaks:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    linkify:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    typographer:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    quotes:</span> <span class="string">'“”‘’'</span></span><br></pre></td></tr></table></figure><p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span>(<span class="string">"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        anchors.options = &#123;</span><br><span class="line">          visible: <span class="string">'hover'</span>,</span><br><span class="line">          placement: <span class="string">'left'</span>,</span><br><span class="line">          icon: ℬ <span class="comment">// this is the header anchor "unicode" icon</span></span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><h2 id="hexo-basics">Hexo Basics</h2><hr><p>Some hexo command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"&lt;post name&gt;"</span> <span class="comment"># you can change post to another layout if you want</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate <span class="comment"># generate the static file</span></span><br><span class="line">hexo server <span class="comment"># run hexo in local environment</span></span><br><span class="line">hexo deploy <span class="comment"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure><h1 id="have-fun-_">Have fun ^_^</h1><hr><!-- Place this tag in your head or just before your close body tag. --><script async defer src="https://buttons.github.io/buttons.js"></script><!-- Place this tag where you want the button to render. --><p>Please <a class="github-button" href="https://github.com/anniepzk/anniepzk.github.io" data-icon="octicon-star" aria-label="Star anniepzk/anniepzk.github.io on GitHub" target="_blank" rel="noopener">Star</a> this Project if you like it! <a class="github-button" href="https://github.com/anniepzk" aria-label="Follow @anniepzk on GitHub" target="_blank" rel="noopener">Follow</a> would also be appreciated!<br>Peace!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;This Annie theme created by &lt;a href=&quot;https://anniepzk.cn/&quot;&gt;Annie&lt;/a&gt; modified from the original Porter &lt;a href=&quot;https://hexo
      
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://anniepzk.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>服务器上配置Jupyter-NoteBook被远程访问</title>
    <link href="https://anniepzk.cn/article/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%85%8D%E7%BD%AEJupyter-NoteBook%E8%A2%AB%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    <id>https://anniepzk.cn/article/服务器上配置Jupyter-NoteBook被远程访问/</id>
    <published>2019-10-29T14:03:16.000Z</published>
    <updated>2019-11-04T16:25:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Jupyter Notebook（此前被称为 IPython notebook）是一个交互式笔记本，支持运行 40 多种编程语言。<br>Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。 用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等</p></blockquote><h2 id="安装">安装</h2><p>Jupyter Note依赖的第三包比较多，所以不推荐大家使用系统环境的Python来安装Jupyter，建议大家虚拟一个纯净的虚拟环境来安装Jupyter，我使用的是Virtualenv+Virtualenvwrapper来控制Python第三包环境，大家记得注意Pip安装Jupyter对应的Python解释器版本，这决定安装后Jupyter的使用所依赖的Python解释器版本，这里我使用的是Pyenv来控制Python解释器版本，大家也可以使用官方推荐的Pipenv，这个根据个人的熟悉度而言。具体安装过程如下：</p><h3 id="创建虚拟环境">创建虚拟环境</h3><p><code>mkvirtualenv jupyter_workspace</code></p><h3 id="安装jupyter">安装jupyter</h3><p>这里我使用了国内Pip源，下载速度比较快！推荐大家使用pip管理工具安装库文件的时候使用国内Pip源。</p><p><code>pip install -i https://pypi.douban.com/simple/ jupyter</code></p><h2 id="环境配置">环境配置</h2><h3 id="生成默认配置文件">生成默认配置文件</h3><p>默认情况下，配置文件 **~/.jupyter/jupyter_notebook_config.py **并不存在，需要自行创建。使用下列命令生成配置文件：</p><p><code>jupyter notebook --generate-config</code></p><p>执行成功后，会出现下面的信息：</p><p>Writing default config to: /home/lee/.jupyter/jupyter_notebook_config.py</p><h3 id="生成密码">生成密码</h3><h4 id="自动生成">自动生成</h4><p>从jupyter notebook 5.0 版本开始，提供了一个命令来设置密码:</p><p><code>jupyter-notebook password</code></p><p>执行成功后，会出现下面的信息：</p><p>Wrote hashed password to /home/lee/.jupyter/jupyter_notebook_config.json</p><p>生成的密码存储在 <strong>jupyter_notebook_config.json</strong></p><h4 id="手动生成">手动生成</h4><p>除了使用提供的命令自动生成，也可以通过手动安装。手动安装不方便的地方在于我们需要自己生成<code>sha1</code>，然后复制粘贴到配置文件<code>.jupyter/jupyter_notebook_config.py</code>进行配置，而且一旦我们需要修改密码的话还得重新进行一样的手动生成配置过程，这样显得很不方便。执行过程如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> notebook.auth <span class="keyword">import</span> passwd</span><br><span class="line">passwd()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.leezc.cn/article/jupyter-passwd.png" alt="jupyter passwd"></p><h3 id="修改配置文件">修改配置文件</h3><p>要在服务器上配置Jupyter NoteBook被远程访问，需要我们进行一些定制化配置，在 jupyter_notebook_config.py中找到下面的行，取消注释并修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">c.NotebookApp.ip=<span class="string">'*'</span>   <span class="comment"># “*”代表非本机都可以访问</span></span><br><span class="line"></span><br><span class="line">c.NotebookApp.certfile = <span class="string">u'/absolute/path/to/your/certificate/fullchain.pem'</span>  <span class="comment"># 配置SSL证书公钥的绝对路径</span></span><br><span class="line"></span><br><span class="line">c.NotebookApp.keyfile = <span class="string">u'/absolute/path/to/your/certificate/privkey.key'</span>  <span class="comment"># 配置SSL证书私钥的绝对路径</span></span><br><span class="line"></span><br><span class="line">c.NotebookApp.open_browser = <span class="keyword">False</span>    <span class="comment"># 修改为在启动notebook的时候不启动浏览器，服务器上我们不需要。</span></span><br><span class="line"></span><br><span class="line">c.NotebookApp.notebook_dir = <span class="string">'/home/lee/jupyter_workspace'</span>    <span class="comment"># 指定notebook服务的目录（缺省为运行jupyter命令时用户所在的目录，注意此目录不能为隐藏目录，记得要先创建这个目录，不然会报错）</span></span><br><span class="line"></span><br><span class="line">c.NotebookApp.port =<span class="number">9999</span> <span class="comment"># 指定notebook的服务端口号，默认8888，可自行指定一个端口, 访问时使用该端口</span></span><br></pre></td></tr></table></figure><h2 id="运行jupyter">运行jupyter</h2><h3 id="终端运行">终端运行</h3><p><code>jupyter notebook</code></p><h3 id="后台运行">后台运行</h3><p>Systemd是目前新版的linux比较常用的管理后台服务的机制。在Linux的发行版Fedora、ArchLinux，Debian（8或以上），Ubuntu（15.04以上），CentOS，Redhat都使用systemd机制。这里我们使用systemd机制来配置Jupyter NoteBook来随系统自启，配置过程如下：</p><p>创建文件/etc/systemd/system/jupyter.service:</p><p><code>sudo vim /etc/systemd/system/jupyter.service</code></p><p>文件内容为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Jupyter Notebook</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/home/zclee/workspace/jupyter_workspace/bin/jupyter-notebook</span><br><span class="line">User=zclee</span><br><span class="line">WorkingDirectory=/home/zclee/jupyter_workspace</span><br><span class="line">Group=www-data</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><ul><li><strong>ExecStart</strong>内容为** jupyter-notebook**可执行文件所在的绝对路径，这里我使用虚拟环境安装的，所以找到虚拟环境所在位置。</li><li><strong>User</strong>内容为你当前用户名</li><li><strong>WorkingDirectory</strong>内容为配置文件<strong>c.NotebookApp.notebook_dir</strong>项所配置内容</li></ul><p>配置并保存之后运行如下命令：</p><ul><li><code>sudo systemctl daemon-reload</code></li><li><code>sudo systemctl enable jupyter</code></li><li><code>sudo systemctl start jupyter</code></li></ul><p>这样我们可以愉快地使用Jupyter NoteBook啦！</p><p>相关命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload  # 重新加载配置</span><br><span class="line"></span><br><span class="line">sudo systemctl enable jupyter  # 设置系统自启动</span><br><span class="line"></span><br><span class="line">sudo systemctl start jupyter  # 手动启动服务</span><br><span class="line"></span><br><span class="line">sudo systemctl status jupyter  # 查看服务状态</span><br><span class="line"></span><br><span class="line">sudo systemctl stop jupyter  # 手动停止服务</span><br><span class="line"></span><br><span class="line">sudo systemctl restart jupyter  # 手动重启服务</span><br><span class="line"></span><br><span class="line">sudo journalctl -f -u jupyter  # 查看日志输出</span><br><span class="line"></span><br><span class="line">sudo journalctl -f -u jupyter | grep -i 'error'  # 查看日志输出中的error部分</span><br><span class="line"></span><br><span class="line">sudo systemctl disable jupyter  # 自启动中去除服务</span><br></pre></td></tr></table></figure><h4 id="nohup后台运行">nohup后台运行</h4><p><code>(nohup jupyter notebook &gt; jupyter.log 2&gt;&amp;1 &amp;)</code></p><p>相关命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lsof -i: 8899 # 查看运行端口</span><br><span class="line"></span><br><span class="line">netstat -an | grep 8899  # 查看运行端口</span><br><span class="line"></span><br><span class="line">tail -f/cat/more jy.log  # 查看运行日志</span><br><span class="line"></span><br><span class="line">kill -9 pid   # 杀死后台运行进程</span><br></pre></td></tr></table></figure><p>更多配置可以查阅官方文档：<a href="https://jupyter-notebook.readthedocs.io/en/latest/public_server.html#notebook-server-security" target="_blank" rel="noopener">Jupyter NoteBook</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Jupyter Notebook（此前被称为 IPython notebook）是一个交互式笔记本，支持运行 40 多种编程语言。&lt;br&gt;
Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码
      
    
    </summary>
    
    
    
      <category term="python" scheme="https://anniepzk.cn/tags/python/"/>
    
      <category term="jupyter" scheme="https://anniepzk.cn/tags/jupyter/"/>
    
      <category term="linux" scheme="https://anniepzk.cn/tags/linux/"/>
    
  </entry>
  
</feed>
